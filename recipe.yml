name: Portableinfo Vanilla Desktop
id: portableinfo-homeserver
stages:
- id: build
  base: ghcr.io/vanilla-os/desktop:main # Optionally, Replace this image URL with a different one i.e. nvidia:main, etc
  singlelayer: false
  labels:
    maintainer: caspertdk
  args:
    DEBIAN_FRONTEND: noninteractive # Set the image environment as non-interactive
  
  # Commands to run first before building the modules
  runs:
    commands:
      - echo 'APT::Install-Recommends "1";' > /etc/apt/apt.conf.d/01norecommends

  modules:
  - name: init-setup
    type: shell
    commands:
    - lpkg --unlock
    - apt-get update

  - name: basic-packages
    type: apt
    source:
      packages:
      - nano
      - jq
      - curl
      - wget

  - name: basic-webi-utils
    type: shell
    commands:
    - curl -sS https://webi.sh/shfmt | sh
    - curl -sS https://webi.sh/yq | sh
    #- curl -sS https://webi.sh/kind | sh
    #- curl -sS https://webi.sh/k9s | sh

  - name: kubectl
    type: shell
    commands:
     - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
     - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
     - rm ./kubectl

  - name: example-modules # Sample module demonstrating importing local and remote modules
    type: includes
    includes:
      - modules/50-install-debs.yml # Sample local module present in this repository
      #- gh:vanilla-os/dev-image:main:modules/00-basics.yml # Sample GitHub remote module in the format: `gh:your-name/your-repo:branch:modules/file.yml`
      #- https://raw.githubusercontent.com/Vanilla-OS/dev-image/main/modules/05-go.yml # Sample full URL remote module

  # Put your custom actions before this comment

  - name: set-image-name-abroot
    type: includes
    includes:
      - modules/80-set-image-abroot-config.yml

  - name: cleanup
    type: shell
    commands:
    - apt-get autoremove -y
    - apt-get clean
    - lpkg --lock

  - name: fsguard
    type: fsguard
    CustomFsGuard: false
    FsGuardLocation: "/usr/sbin/FsGuard"
    GenerateKey: true
    FilelistPaths: ["/usr/bin"]
    modules:
      - name: remove-prev-fsguard
        type: shell
        commands:
          - rm -rf /FsGuard 
          - rm -f ./minisign.pub ./minisign.key 
          - chmod +x /usr/sbin/init

  - name: cleanup2
    type: shell
    commands:
      - rm -rf /tmp/*
      - rm -rf /var/tmp/*
      - rm -rf /sources
